generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  //shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model anamnese {
  id              Int           @id @default(autoincrement())
  question        String?       @db.VarChar(255)
  answer          String?       @db.VarChar(255)
  wroteanswer     String?       @db.VarChar(255)
  solicitation_id Int?
  solicitation    solicitation? @relation(fields: [solicitation_id], references: [id], onDelete: Cascade, map: "FK_403871ba1dbb36f5e0dc87d988c")

  @@index([solicitation_id], map: "FK_403871ba1dbb36f5e0dc87d988c")
}

model annotation {
  id           Int        @id @default(autoincrement())
  message      String?    @db.Text
  created_at   Float?
  status       Int?
  user_id      Int?
  component_id Int?
  component    component? @relation(fields: [component_id], references: [id], onDelete: Cascade, map: "FK_84e2dda575f07cefe2f9c610609")
  profile      profile?   @relation(fields: [user_id], references: [user_id], onDelete: Cascade, map: "FK_ae752a33c25b8bbb5e43b77a0b6")

  @@index([component_id], map: "FK_84e2dda575f07cefe2f9c610609")
  @@index([user_id], map: "FK_ae752a33c25b8bbb5e43b77a0b6")
}

model aulaconcluida {
  id           Int        @id @default(autoincrement())
  created_at   Float?
  rate         Int?
  status       Int?
  component_id Int?
  user_id      Int?
  component    component? @relation(fields: [component_id], references: [id], onDelete: Cascade, map: "FK_2b2e51790d9706dc8da1a1189a0")
  profile      profile?   @relation(fields: [user_id], references: [user_id], onDelete: Cascade, map: "FK_642af74b2d31451be3182f503b3")

  @@index([component_id], map: "FK_2b2e51790d9706dc8da1a1189a0")
  @@index([user_id], map: "FK_642af74b2d31451be3182f503b3")
}

model cart {
  id           Int        @id @default(autoincrement())
  unityprice   Float?     @db.Float
  quantity     Int?
  discount     Float?     @db.Float
  total        Float?     @db.Float
  tax          Float?     @db.Float
  created_at   Float?
  status       Int?
  description  String?    @db.VarChar(255)
  numcartao    String?    @db.VarChar(255)
  nomecartao   String?    @db.VarChar(255)
  expiryMonth  String?    @db.VarChar(255)
  expiryYear   String?    @db.VarChar(255)
  codcartao    String?    @db.VarChar(255)
  parcelas     Int?
  component_id Int?
  user_id      Int?
  component    component? @relation(fields: [component_id], references: [id], onDelete: Cascade, map: "FK_6102b3e6636b9af5533e9da8230")
  user         user?      @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "FK_f091e86a234693a49084b4c2c86")

  @@index([component_id], map: "FK_6102b3e6636b9af5533e9da8230")
  @@index([user_id], map: "FK_f091e86a234693a49084b4c2c86")
}

model city {
  id                                         Int               @id @default(autoincrement())
  name                                       String?           @db.VarChar(255)
  state                                      Int?
  state_city_stateTostate                    state?            @relation("city_stateTostate", fields: [state], references: [id], onDelete: Cascade, map: "FK_b2c0a742cf4e89f804f2de03bf7")
  profile_profile_cityTocity                 profile[]         @relation("profile_cityTocity")
  profile_patient_profile_patient_cityTocity profile_patient[] @relation("profile_patient_cityTocity")

  @@index([state], map: "FK_b2c0a742cf4e89f804f2de03bf7")
}

model component {
  id                  Int                   @id @default(autoincrement())
  name                String?               @db.VarChar(255)
  description         String?               @db.Text
  created_at          Float?
  status              Int?
  order               Int?
  duration            Int?
  tags                String?               @db.VarChar(255)
  orderby             String?               @db.VarChar(255)
  component_id        Int?
  annotation          annotation[]
  aulaconcluida       aulaconcluida[]
  cart                cart[]
  parent              component?            @relation("componentTocomponent", fields: [component_id], references: [id], onDelete: Cascade, map: "FK_2d0ddf7ae90f2607f35816bd81c")
  children            component[]           @relation("componentTocomponent")
  component_available component_available[]
  component_extra     component_extra[]

  @@index([component_id], map: "FK_2d0ddf7ae90f2607f35816bd81c")
}

model component_available {
  id             Int        @id @default(autoincrement())
  turma_num      String?    @db.VarChar(255)
  available_date DateTime?  @db.DateTime(0)
  component_id   Int?
  component      component? @relation(fields: [component_id], references: [id], onDelete: Cascade, map: "FK_0a750b4b6aac7844bcffcac8cdb")

  @@index([component_id], map: "FK_0a750b4b6aac7844bcffcac8cdb")
}

model component_extra {
  id           Int        @id @default(autoincrement())
  key_extra    String?    @db.VarChar(100)
  value_extra  String?    @db.Text
  created_at   Float?
  status       Int?
  component_id Int?
  component    component? @relation(fields: [component_id], references: [id], onDelete: Cascade, map: "FK_10dabe5708c4be94302789fa498")

  @@index([component_id], map: "FK_10dabe5708c4be94302789fa498")
}

model contact {
  id         Int     @id @default(autoincrement())
  created_at Float?
  name       String? @db.VarChar(255)
  email      String? @db.VarChar(255)
  subject    String? @db.VarChar(255)
  message    String? @db.Text
}

model email {
  Id           Int       @id @default(autoincrement())
  name         String?   @db.VarChar(255)
  email        String?
  whatsapp     String?   @db.VarChar(255)
  list         String?   @db.VarChar(100)
  confirm      Int?
  segmentacao  String?   @db.VarChar(100)
  created_at   DateTime? @db.DateTime(0)
  confirmed_at DateTime? @db.DateTime(0)
  origin       String?   @db.VarChar(255)
  naoperturbe  Int?

  @@unique([email, list], map: "unique_email_list")
}

model emailtolist {
  id         Int      @id @default(autoincrement())
  list       String   @db.VarChar(255)
  subject    String   @db.VarChar(255)
  message    String?  @db.Text
  quantity   Int
  created_at Float?
  status     Int?
  user_id    Int?
  profile    profile? @relation(fields: [user_id], references: [user_id], onDelete: Cascade, map: "FK_1c4efa290c7437a37089f1d1be0")

  @@index([user_id], map: "FK_1c4efa290c7437a37089f1d1be0")
}

model feedback {
  id              Int           @id @default(autoincrement())
  question        String?       @db.VarChar(255)
  answer          String?       @db.VarChar(255)
  wroteanswer     String?       @db.VarChar(255)
  solicitation_id Int?
  solicitation    solicitation? @relation(fields: [solicitation_id], references: [id], onDelete: Cascade, map: "FK_eeebeeee32d4fda148225cac860")

  @@index([solicitation_id], map: "FK_eeebeeee32d4fda148225cac860")
}

model occupation {
  id         Int      @id @default(autoincrement())
  name       String?  @db.VarChar(255)
  created_at Float?
  status     Int?
  user_id    Int?
  profile    profile? @relation(fields: [user_id], references: [user_id], onDelete: Cascade, map: "FK_410242207d769a658fa1d8f2f4c")

  @@index([user_id], map: "FK_410242207d769a658fa1d8f2f4c")
}

model profile {
  user_id                           Int             @id @default(autoincrement())
  name                              String?         @db.VarChar(255)
  bio                               String?         @db.Text
  whatsapp                          String?         @db.VarChar(255)
  cpf                               String?         @db.VarChar(255)
  postalCode                        String?         @db.VarChar(255)
  address                           String?         @db.VarChar(255)
  addressNumber                     String?         @db.VarChar(255)
  addressDistrict                   String?         @db.VarChar(255)
  image                             String?         @db.VarChar(255)
  city                              Int?
  state                             Int?
  annotation                        annotation[]
  aulaconcluida                     aulaconcluida[]
  emailtolist                       emailtolist[]
  occupation                        occupation[]
  city_profile_cityTocity           city?           @relation("profile_cityTocity", fields: [city], references: [id], onDelete: Cascade, map: "FK_572de9e96808fe66e9fa73d23fc")
  state_profile_stateTostate        state?          @relation("profile_stateTostate", fields: [state], references: [id], onDelete: Cascade, map: "FK_c97baded5e4e93abc4d53671960")
  support_support_user_idToprofile  support[]       @relation("support_user_idToprofile")
  support_support_admin_idToprofile support[]       @relation("support_admin_idToprofile")
  user                              user?

  @@index([city], map: "FK_572de9e96808fe66e9fa73d23fc")
  @@index([state], map: "FK_c97baded5e4e93abc4d53671961")
}

model profile_patient {
  user_id                            Int           @id @default(autoincrement())
  name                               String?       @db.VarChar(255)
  whatsapp                           String?       @db.VarChar(255)
  cpf                                String?       @db.VarChar(255)
  postalCode                         String?       @db.VarChar(255)
  address                            String?       @db.VarChar(255)
  addressNumber                      String?       @db.VarChar(255)
  addressDistrict                    String?       @db.VarChar(255)
  image                              String?       @db.VarChar(255)
  city                               Int?
  state                              Int?
  state_profile_patient_stateTostate state?        @relation("profile_patient_stateTostate", fields: [state], references: [id], onDelete: Cascade, map: "FK_415dbe18f7eaf907fabc8ce7e6f")
  city_profile_patient_cityTocity    city?         @relation("profile_patient_cityTocity", fields: [city], references: [id], onDelete: Cascade, map: "FK_ba785bf629f30d36e283da3b4f8")
  user_patient                       user_patient?

  @@index([state], map: "FK_415dbe18f7eaf907fabc8ce7e6f")
  @@index([city], map: "FK_ba785bf629f30d36e283da3b4f8")
}

model soliciationhistorydetail {
  id                  Int                  @id @default(autoincrement())
  type_detail         String?              @db.VarChar(255)
  value_detail        String?              @db.VarChar(255)
  history_id          Int?
  solicitationhistory solicitationhistory? @relation(fields: [history_id], references: [id], onDelete: Cascade, map: "FK_6e1001ac3b6325df6f098b3867b")

  @@index([history_id], map: "FK_6e1001ac3b6325df6f098b3867b")
}

model solicitation {
  id                  Int                   @id @default(autoincrement())
  feedback_patient    String?               @db.Text
  created_at          Float?
  status              Int?
  user_id             Int?
  patient_id          Int?
  session             Int?
  anamnese            anamnese[]
  feedback            feedback[]
  user                user?                 @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "FK_bb46e03ef99165b60be17315438")
  user_patient        user_patient?         @relation(fields: [patient_id], references: [id], onDelete: Cascade, map: "FK_d5263e6aef4e10a6d51e0570b7c")
  solicitationhistory solicitationhistory[]

  @@index([user_id], map: "FK_bb46e03ef99165b60be17315438")
  @@index([patient_id], map: "FK_d5263e6aef4e10a6d51e0570b7c")
}

model solicitationhistory {
  id                       Int                        @id @default(autoincrement())
  type_history             String?                    @db.VarChar(255)
  message                  String?                    @db.VarChar(255)
  created_at               Float?
  status                   Int?
  solicitation_id          Int?
  user_id                  Int?
  patient_id               Int?
  soliciationhistorydetail soliciationhistorydetail[]
  user                     user?                      @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "FK_19bc06e343eb7771bc9e1833db4")
  solicitation             solicitation?              @relation(fields: [solicitation_id], references: [id], onDelete: Cascade, map: "FK_9b3bc4d1781fb246945700584d1")
  user_patient             user_patient?              @relation(fields: [patient_id], references: [id], onDelete: Cascade, map: "FK_bde6410adbbc10e37fe2ed483ee")

  @@index([user_id], map: "FK_19bc06e343eb7771bc9e1833db4")
  @@index([solicitation_id], map: "FK_9b3bc4d1781fb246945700584d1")
  @@index([patient_id], map: "FK_bde6410adbbc10e37fe2ed483ee")
}

model state {
  id                                           Int               @id @default(autoincrement())
  name                                         String?           @db.VarChar(255)
  state                                        String?           @db.VarChar(255)
  country                                      Int?
  city_city_stateTostate                       city[]            @relation("city_stateTostate")
  profile_profile_stateTostate                 profile[]         @relation("profile_stateTostate")
  profile_patient_profile_patient_stateTostate profile_patient[] @relation("profile_patient_stateTostate")
}

model support {
  id                                Int      @id @default(autoincrement())
  message                           String?  @db.Text
  created_at                        Float?
  reply                             String?  @db.Text
  replied_at                        Float?
  status                            Int?
  user_id                           Int?
  admin_id                          Int?
  profile_support_user_idToprofile  profile? @relation("support_user_idToprofile", fields: [user_id], references: [user_id], onDelete: Cascade, map: "FK_d53ceb941621665a8d6b1d1b186")
  profile_support_admin_idToprofile profile? @relation("support_admin_idToprofile", fields: [admin_id], references: [user_id], onDelete: Cascade, map: "FK_ec6226b3485824ea48a78e9434a")

  @@index([user_id], map: "FK_d53ceb941621665a8d6b1d1b186")
  @@index([admin_id], map: "FK_ec6226b3485824ea48a78e9434a")
}

model user {
  id                  Int                   @id @default(autoincrement())
  username            String                @db.VarChar(255)
  email               String                @db.VarChar(255)
  password_hash       String                @db.VarChar(60)
  auth_key            String?               @db.VarChar(255)
  confirmed_at        Int?
  unconfirmed_email   String?               @db.VarChar(255)
  blocked_at          Int?
  registration_ip     String?               @db.VarChar(45)
  created_at          Int
  updated_at          Int?
  flags               Int                   @default(0)
  last_login_at       Int?
  origin              String?               @db.VarChar(255)
  num_turma           Int?
  profileUserId       Int?                  @unique(map: "REL_8fbc5ddde72dd2f99fad04ff78")
  cart                cart[]
  solicitation        solicitation[]
  solicitationhistory solicitationhistory[]
  profile             profile?              @relation(fields: [profileUserId], references: [user_id], onDelete: Cascade, map: "FK_8fbc5ddde72dd2f99fad04ff783")
}

model user_patient {
  id                  Int                   @id @default(autoincrement())
  username            String                @db.VarChar(255)
  email               String                @db.VarChar(255)
  password_hash       String                @db.VarChar(60)
  auth_key            String?               @db.VarChar(255)
  confirmed_at        Int?
  unconfirmed_email   String?               @db.VarChar(255)
  blocked_at          Int?
  registration_ip     String?               @db.VarChar(45)
  created_at          Int
  updated_at          Int?
  flags               Int                   @default(0)
  last_login_at       Int?
  origin              String?               @db.VarChar(255)
  profileUserId       Int?                  @unique(map: "REL_ad44460018652c16182fcc2b83")
  solicitation        solicitation[]
  solicitationhistory solicitationhistory[]
  profile_patient     profile_patient?      @relation(fields: [profileUserId], references: [user_id], onDelete: Cascade, map: "FK_ad44460018652c16182fcc2b832")
}

model wppcamp {
  id          Int        @id @default(autoincrement())
  name        String?    @db.VarChar(255)
  description String?    @db.Text
  slug        String?    @db.VarChar(255)
  maxclicks   Int?
  created_at  Float?
  status      Int?
  wppgroup    wppgroup[]
}

model wppgroup {
  id         Int      @id @default(autoincrement())
  name       String?  @db.VarChar(255)
  url        String?  @db.VarChar(255)
  clicks     Int?
  created_at Float?
  status     Int?
  camp_id    Int?
  wppcamp    wppcamp? @relation(fields: [camp_id], references: [id], onDelete: Cascade, map: "FK_b3d6842a36812a1936aa84aa5fa")

  @@index([camp_id], map: "FK_b3d6842a36812a1936aa84aa5fa")
}
